-- MySQL Script generated by MySQL Workbench
-- Tue Mar 27 23:22:23 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema assignemnt
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema assignemnt
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `assignemnt` DEFAULT CHARACTER SET latin1 ;
USE `assignemnt` ;

-- -----------------------------------------------------
-- Table `assignemnt`.`korisnik`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assignemnt`.`korisnik` (
  `idkorisnik` INT(11) NOT NULL AUTO_INCREMENT,
  `ime` VARCHAR(45) NOT NULL,
  `prezime` VARCHAR(45) NOT NULL,
  `datum_rodjenja` DATE NOT NULL,
  `drzava_rodjenja` VARCHAR(45) NOT NULL,
  `email_adresa` VARCHAR(45) NOT NULL,
  `korisnicko_ime` VARCHAR(45) NOT NULL,
  `kratka_biografija` TINYTEXT NOT NULL,
  `fotografija` BLOB NOT NULL,
  PRIMARY KEY (`idkorisnik`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `assignemnt`.`prijateljstva`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assignemnt`.`prijateljstva` (
  `idprijateljstva` INT(11) NOT NULL AUTO_INCREMENT,
  `korisnik1_id` INT(11) NOT NULL,
  `korisnik2_id` INT(11) NOT NULL,
  `prijateljstvo_id` INT(11) NOT NULL,
  PRIMARY KEY (`idprijateljstva`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `assignemnt`.`korisnik_prijateljstvo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assignemnt`.`korisnik_prijateljstvo` (
  `idkorisnik_prijateljstvo` INT(11) NOT NULL AUTO_INCREMENT,
  `friendship1` INT(11) NOT NULL,
  `friendship2` INT(11) NOT NULL,
  `korisnik_id` INT(11) NOT NULL,
  `prijateljstvo_id` INT(11) NOT NULL,
  PRIMARY KEY (`idkorisnik_prijateljstvo`),
  INDEX `fk_prijatkorisnik_idx` (`prijateljstvo_id` ASC),
  INDEX `fk_korisnikprijat_idx` (`korisnik_id` ASC),
  CONSTRAINT `fk_korisnikprijat`
    FOREIGN KEY (`korisnik_id`)
    REFERENCES `assignemnt`.`korisnik` (`idkorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_prijatkorisnik`
    FOREIGN KEY (`prijateljstvo_id`)
    REFERENCES `assignemnt`.`prijateljstva` (`idprijateljstva`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `assignemnt`.`status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assignemnt`.`status` (
  `idstatus` INT(11) NOT NULL AUTO_INCREMENT,
  `naslov` TINYTEXT NOT NULL,
  `datum_vrijeme` DATETIME NOT NULL,
  `tekst` VARCHAR(45) NULL DEFAULT NULL,
  `slika` BLOB NULL DEFAULT NULL,
  PRIMARY KEY (`idstatus`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;


-- -----------------------------------------------------
-- Table `assignemnt`.`korisnik_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assignemnt`.`korisnik_status` (
  `idkorisnik_status` INT(11) NOT NULL AUTO_INCREMENT,
  `korisnik_id` INT(11) NOT NULL,
  `status_id` INT(11) NOT NULL,
  PRIMARY KEY (`idkorisnik_status`),
  INDEX `korisnik_status_idx` (`korisnik_id` ASC),
  INDEX `status_korisnik_idx` (`status_id` ASC),
  CONSTRAINT `korisnik_status`
    FOREIGN KEY (`korisnik_id`)
    REFERENCES `assignemnt`.`korisnik` (`idkorisnik`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `status_korisnik`
    FOREIGN KEY (`status_id`)
    REFERENCES `assignemnt`.`status` (`idstatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

USE `assignemnt` ;

-- -----------------------------------------------------
-- Placeholder table for view `assignemnt`.`basic_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assignemnt`.`basic_info` (`ime` INT, `prezime` INT, `datum_rodjenja` INT, `drzava_rodjenja` INT);

-- -----------------------------------------------------
-- procedure change_user
-- -----------------------------------------------------

DELIMITER $$
USE `assignemnt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `change_user`(
idkorisnik int(11),
ime varchar (45),
prezime varchar (45),
datum_rodjenja date,
drzava_rodjenja varchar (45),
email_adresa varchar (45),
korisnicko_ime varchar (45),
kratka_biografija tinytext,
fotografija blob
)
BEGIN
update korisnik set 
ime=ime,
prezime=prezime,
datum_rodjenja=datum_rodjenja,
drzava_rodjenja=drzava_rodjenja,
email_adresa=email_adresa,
korisnicko_ime=korisnicko_ime,
kratka_biografija=kratka_biografija,
fotografija=fotografija
where idkorisnik=idkorisnik;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function count_friends
-- -----------------------------------------------------

DELIMITER $$
USE `assignemnt`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `count_friends`(idkorisnik INT (11) ) RETURNS int(11)
BEGIN
declare count_friends int ;
set count_friends=0;
select idprijateljstva
into count_friends
from prijateljstva
where idprijateljstva>0;
if (count_friends>0)
then set count_friends = count_friends+1;

end if;
RETURN count_friends;

end$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure delete_user
-- -----------------------------------------------------

DELIMITER $$
USE `assignemnt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_user`(idkorisnik int)
BEGIN
delete from korisnik where korisnik_id=idkorisnik;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure insertuser
-- -----------------------------------------------------

DELIMITER $$
USE `assignemnt`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `insertuser`(newidkorisnik INT(11), newime varchar(45),newprezime varchar(45), newdatum_rodjenja DATE, newdrzava_rodjenja varchar(45), newemail_adresa varchar(45), newkorisnicko_ime varchar (45), newkratka_biografija TINYTEXT, newfotografija BLOB)
BEGIN
   declare usersCount int;
   select count(idkorisnik) from korisnik where ime=newime into usersCount;
   if usersCount<1 then
   insert into korisnik (idkorisnik, ime, prezime, datum_rodjenja, drzava_rodjenja, email_adresa, korisnicko_ime, kratka_biografija, fotografija) values (newidkorisnik, newime, newprezime, newdatum_rodjenja, newdrzava_rodjenja, newemail_adresa, newkorisnicko_ime, newkratka_biografija, newfotografija);
   end if;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `assignemnt`.`basic_info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `assignemnt`.`basic_info`;
USE `assignemnt`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `assignemnt`.`basic_info` AS select `assignemnt`.`korisnik`.`ime` AS `ime`,`assignemnt`.`korisnik`.`prezime` AS `prezime`,`assignemnt`.`korisnik`.`datum_rodjenja` AS `datum_rodjenja`,`assignemnt`.`korisnik`.`drzava_rodjenja` AS `drzava_rodjenja` from `assignemnt`.`korisnik`;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
